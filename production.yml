version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  worker_usr_data: {}
  worker_tmp: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: gremlin_production_django
    container_name: django
    depends_on:
      - postgres
      - redis
      - tika
    volumes:
      - .:/app
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: gremlin_gplv3_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: gremlin_gplv3_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"

  redis:
    image: redis:5.0

  gremlinworker:
    <<: *django
    image: gremlin_production_django:latest
    command: /start-celeryworker
    volumes:
      - worker_usr_data:/usr/local
      - worker_tmp:/tmp
      - .:/app

  celerybeat:
    <<: *django
    image: gremlin_production_django:latest
    command: /start-celerybeat
    depends_on:
      - redis
      - postgres

  flower:
    <<: *django
    image: gremlin_production_django:latest
    command: /start-flower

  tika:
    image: apache/tika:1.24.1
    container_name: tika
    ports:
      - 9998:9998

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups
